{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\workintech\\\\S9\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(_ref) {\n  _s();\n  var _errors$title, _errors$description;\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    people: []\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    setValue // useForm'dan setValue fonksiyonunu al\n  } = useForm({\n    mode: \"all\"\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  useEffect(() => {\n    const isFormValid = Object.keys(errors).length === 0;\n    const areFormFieldsFilled = Object.values(formData).every(value => value !== \"\");\n    setButtonDisabled(!isFormValid || !areFormFieldsFilled);\n  }, [errors, formData]);\n  const handleCheckboxChange = e => {\n    const {\n      value\n    } = e.target;\n    setFormData(prevData => {\n      const updatedPeople = [...prevData.people];\n      const index = updatedPeople.indexOf(value);\n      if (index > -1) {\n        updatedPeople.splice(index, 1);\n      } else {\n        updatedPeople.push(value);\n      }\n      return {\n        ...prevData,\n        people: updatedPeople\n      };\n    });\n  };\n  const onSubmit = data => {\n    submitFn({\n      ...formData,\n      id: nanoid(5),\n      status: \"yapılacak\",\n      title: data.title,\n      // Güncel başlık verisini kullan\n      description: data.description // Güncel açıklama verisini kullan\n    });\n\n    setFormData({\n      title: \"\",\n      description: \"\",\n      people: []\n    });\n\n    // Formu sıfırlarken input değerlerini de sıfırla\n    setValue(\"title\", \"\");\n    setValue(\"description\", \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        ...register(\"title\", {\n          required: \"Zorunlu alan boş bırakmayınız.\",\n          minLength: {\n            value: 3,\n            message: \"En az 3 karakter girilmelidir.\"\n          }\n        }),\n        \"aria-invalid\": errors[\"title\"] ? \"true\" : \"false\",\n        placeholder: \"Ba\\u015Fl\\u0131k giriniz.\",\n        type: \"text\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors[\"title\"] && /*#__PURE__*/_jsxDEV(\"p\", {\n          role: \"alert\",\n          children: (_errors$title = errors[\"title\"]) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        name: \"description\",\n        placeholder: \"A\\xE7\\u0131klama giriniz.\",\n        ...register(\"description\", {\n          required: \"Zorunlu alan boş bırakmayınız.\",\n          minLength: {\n            value: 10,\n            message: \"Enaz 10 karakter girilmelidir.\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors[\"description\"] && /*#__PURE__*/_jsxDEV(\"p\", {\n          role: \"alert\",\n          children: (_errors$description = errors[\"description\"]) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"people\",\n            value: p,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: buttonDisabled,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"OSPD6Z1SUNViSylpAu4FnVEupS0=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useState","useEffect","useForm","nanoid","TaskHookForm","kisiler","submitFn","formData","setFormData","title","description","people","register","handleSubmit","formState","errors","setValue","mode","buttonDisabled","setButtonDisabled","isFormValid","Object","keys","length","areFormFieldsFilled","values","every","value","handleCheckboxChange","e","target","prevData","updatedPeople","index","indexOf","splice","push","onSubmit","data","id","status","required","minLength","message","map","p"],"sources":["C:/Users/PC/Desktop/workintech/S9/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function TaskHookForm({ kisiler, submitFn }) {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    people: [],\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue, // useForm'dan setValue fonksiyonunu al\r\n  } = useForm({\r\n    mode:\"all\"\r\n  });\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const isFormValid = Object.keys(errors).length === 0;\r\n    const areFormFieldsFilled = Object.values(formData).every((value) => value !== \"\");\r\n    setButtonDisabled(!isFormValid || !areFormFieldsFilled);\r\n  }, [errors, formData]);\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setFormData((prevData) => {\r\n      const updatedPeople = [...prevData.people];\r\n      const index = updatedPeople.indexOf(value);\r\n\r\n      if (index > -1) {\r\n        updatedPeople.splice(index, 1);\r\n      } else {\r\n        updatedPeople.push(value);\r\n      }\r\n\r\n      return {\r\n        ...prevData,\r\n        people: updatedPeople,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    submitFn({\r\n      ...formData,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\",\r\n      title: data.title, // Güncel başlık verisini kullan\r\n      description: data.description, // Güncel açıklama verisini kullan\r\n    });\r\n\r\n    setFormData({\r\n      title: \"\",\r\n      description: \"\",\r\n      people: [],\r\n    });\r\n\r\n    // Formu sıfırlarken input değerlerini de sıfırla\r\n    setValue(\"title\", \"\");\r\n    setValue(\"description\", \"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          {...register(\"title\", {\r\n            required: \"Zorunlu alan boş bırakmayınız.\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"En az 3 karakter girilmelidir.\",\r\n            },\r\n          })}\r\n          aria-invalid={errors[\"title\"] ? \"true\" : \"false\"}\r\n          placeholder=\"Başlık giriniz.\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n        />\r\n        <p className=\"input-error\">\r\n          {errors[\"title\"] && <p role=\"alert\">{errors[\"title\"]?.message}</p>}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          name=\"description\"\r\n          placeholder=\"Açıklama giriniz.\"\r\n          {...register(\"description\", {\r\n            required: \"Zorunlu alan boş bırakmayınız.\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Enaz 10 karakter girilmelidir.\",\r\n            }})}\r\n            ></textarea>\r\n            <p className=\"input-error\">\r\n            {errors[\"description\"] && (\r\n            <p role=\"alert\">{errors[\"description\"]?.message}</p>\r\n            )}\r\n            </p>\r\n            </div>\r\n            <div className=\"form-line\">\r\n            <label className=\"input-label\">İnsanlar</label>\r\n            <div>\r\n              {kisiler.map((p) => (\r\n                <label className=\"input-checkbox\" key={p}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"people\"\r\n                    value={p}\r\n                    onChange={handleCheckboxChange}\r\n                  />\r\n                  {p}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        \r\n          <div className=\"form-line\">\r\n            <button\r\n              className=\"submit-button\"\r\n              type=\"submit\"\r\n              disabled={buttonDisabled}\r\n            >\r\n              Kaydet\r\n            </button>\r\n          </div>\r\n        </form>\r\n        );\r\n      }        "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}